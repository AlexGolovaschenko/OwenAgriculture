# LOCAL MACHINE
# my Windows Ubuntu
#  user: 			alex
#  password: 		Asd234z....
#  home directory: 	C:\Users\Александ Головащенко\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\home
#  ssh key: 		C:\Users\Александ Головащенко\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\home\alex\.ssh

#--------------------------------------------------------------
# REMOTE MACHINE
# Lenode accaunt
#   user: AlexGolovaschenko
#   pass: Asd234z...

# Remote Machine:
# Ubuntu 18.10

# for FileZilla ftp client
#   host: sftp://172.105.95.231
#   user: root
#   pass: Asd234z...
#   port: 22	

# user root
#   user: root
#   pass: Asd234z...

# user alex
#   user: alex
#   pass: Asd234z...

# apache logs location
# /var/log/apache2/

# djago enable exeptions when Debug=False
DEBUG_PROPAGATE_EXCEPTIONS = True

#--------------------------------------------------------------
# --- SETUP SERVER ---
# --- ON LOCAL MACHINE ---
# remove old ssh key, if nned (the ssh key can be associated with host, what can cause of "Host key varification failed")
$ ssh-keygen -f "/home/alex/.ssh/known_hosts" -R "172.105.95.231"
# connect to host like root
$ ssh root@172.105.95.231

# --- ON REMOTE MACHINE ---
# apdate and upgrade linux packages
$ apt-get update && apt-get upgrade

# set host name for this machine
$ hostnamectl set-hostname opsi-wiki-server
# look carrent host name
$ hostname
# open host-file
$ nano /etc/hosts
# in the host-file you shold append new host
# it shold looks like this:
  127.0.0.1			localhost
  172.105.95.231	opsi-wiki-server

# create new user
$ adduser alex
# add user to groop sudo, for it can use admine commands
$ adduser alex sudo
# relogin like new user
$ exit
$ ssh alex@172.105.95.231

# setup ssh bayse authentication instead a pasword
# go to home folder
$ cd
# create directory .ssh in home folder
$ mkdir -p ~/.ssh
# --- ON LOCAL MACHINE ---
# create ssh-key
$ ssh-keygen -b 4096
# copy publick key to the server
# here we use scp command for copy publick key from local machine, path '~/.ssh/id_rsa.pub',
# to remote server alex@172.105.95.231 along the path '~/.ssh/' and store it like file 'authorized_keys'
$ scp ~/.ssh/id_rsa.pub alex@172.105.95.231:~/.ssh/authorized_keys
# --- ON REMOTE MACHINE ---
# set permithions for directory
$ sudo chmod 700 ~/.ssh/
# set permithions for all files in directory
$ sudo chmod 600 ~/.ssh/*
# now we can login without the password
# test it
$ exit
$ ssh alex@172.105.95.231
# you shold login without the password

# disable root user and password authentification
# open ssh config file
$ sudo nano /etc/ssh/sshd_config
# in the file we should change PermitRootLogin to no
  PermitRootLogin no
# and uncomment #PasswordAuthentication and set it to no
  PasswordAuthentication no
# we need to restart ssh service
$ sudo systemctl restart sshd

# setup firewall
# install ufw
$ sudo apt-get install ufw
# setup roots
$ sudo ufw default allow outgoing
$ sudo ufw default deny incoming
$ sudo ufw allow ssh
# allow server port, we will youse it for test and will deny soon
$ sudo ufw allow 8000
# enable
$ sudo ufw enable
# look status
$ sudo ufw status

# put django app to the server
# --- ON LOCAL MACHINE ---
# copy project to home folder on the server
$ cd /mnt/d/Phyton/
$ scp -r OPSI-Wiki alex@172.105.95.231:~/

# --- ON REMOTE MACHINE ---
# create virtual enviroment
# install pip
$ sudo apt-get install python3-pip
# install venv
$ sudo apt-get install python3-venv
# create venv
$ python3 -m venv OPSI-Wiki/venv
# activate venv
$ cd OPSI-Wiki
$ source venv/bin/activate
# install requirements
$ pip install -r requirements.txt
# install mysqlclient
$ pip install --upgrade setuptools
$ sudo apt-get install python3.6-dev libmysqlclient-dev
$ pip install mysqlclient

# run test django server
# change local_settings.py
$ sudo nano opsi_wiki/local_settings.py
# in the file
	# delete DATABASES = {...}
	ALLOWED_HOSTS.append('172.105.95.231')
# collect statics
$ python manage.py collectstatic
# migrate
$ python manage.py migrate
# run server
$ python manage.py runserver 0.0.0.0:8000
# now you can acces to site by http://172.105.95.231:8000/

# install apache
$ cd
$ sudo apt-get install apache2
# install mod-wsgi
$ sudo apt-get install libapache2-mod-wsgi-py3

# config apache
# go to config dir
$ cd /etc/apache2/sites-available/
# copy file '000-default.conf' and save it like 'opsi_wiki.conf'
$ sudo cp 000-default.conf opsi_wiki.conf
# edit conf
$ sudo nano opsi_wiki.conf
# on the bottom of file (befor </VirtualHost>) add:
...
	Alias /static /home/alex/OPSI-Wiki/static
	<Directory /home/alex/OPSI-Wiki/static>
		Require all granted
	</Directory>

	Alias /media /home/alex/OPSI-Wiki/media
	<Directory /home/alex/OPSI-Wiki/media>
		Require all granted
	</Directory>

	<Directory /home/alex/OPSI-Wiki/opsi_wiki>
		<Files wsgi.py>
			Require all granted
		</Files>
	</Directory>

	WSGIScriptAlias / /home/alex/OPSI-Wiki/opsi_wiki/wsgi.py
	WSGIDaemonProcess wiki_app python-path=/home/alex/OPSI-Wiki python-home=/home/alex/OPSI-Wiki/venv
	WSGIProcessGroup wiki_app
</VirtualHost>
# enable site opsi_wiki
$ cd
$ sudo a2ensite opsi_wiki
# disable defaul site
$ sudo a2dissite 000-default.conf
# make apache the groupe owner of file 'db.sqlite3' ( apache user is :www-data )
# and for OPSI-Wiki folder, for media folder and inner files 
$ cd
$ sudo chown :www-data OPSI-Wiki/db.sqlite3
$ sudo chmod 664 OPSI-Wiki/db.sqlite3
$ sudo chown :www-data OPSI-Wiki/
$ sudo chown -R :www-data OPSI-Wiki/media/
$ sudo chmod -R 775 OPSI-Wiki/media/
$ sudo chmod 775 OPSI-Wiki/

# disallow port 8000
$ sudo ufw delete allow 8000
# allow http trafic
$ sudo ufw allow http/tcp

# restart apache server
$ sudo service apache2 restart 

# site shoulr now be live !
# http://172.105.95.231

# exit out of server
$ exit

#--------------------------------------------------------------
# for solve the problem vith UnicodeEncodeError, when you try to upload files with cirilic simbols
# ( https://stackoverflow.com/questions/2076708/python-os-stat-and-unicode-file-names )
# you shold edit file /etc/apache2/envvars
# and add there two records
$ sudo nano /etc/apache2/envvars
	...
    export LANG='en_US.UTF-8'
    export LC_ALL='en_US.UTF-8'
    ...

#--------------------------------------------------------------
# install MySQL
# ( https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-18-04 )
# Step 1 — Installing MySQL
$ sudo apt update
$ sudo apt install mysql-server
# Step 2 — Configuring MySQL
$ sudo mysql_secure_installation
	-> Would you like to setup VALIDATE PASSWORD plugin? -> no
	-> New password: -> Asd234z...
	-> Remove anonymous users? -> yes
	-> Disallow root login remotely? -> yes
	-> Remove test database and access to it? -> yes
	-> Reload privilege tables now? -> yes
# Step 3 — Adjusting User Authentication and Privileges
$ sudo mysql
mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;
# create user
mysql> CREATE USER 'opsi_wiki'@'localhost' IDENTIFIED BY 'Asd234z...';
# grant your new user the appropriate privileges
mysql> GRANT ALL PRIVILEGES ON *.* TO 'opsi_wiki'@'localhost' WITH GRANT OPTION;
mysql> exit
# login like new user 
$ mysql -u opsi_wiki -p
# create db
mysql> CREATE DATABASE opsi_wiki CHARACTER SET utf8;
mysql> exit
# don't forget make migrations and restart apache2

# restore MySQL db from backup file
# ( https://support.hostway.com/hc/en-us/articles/360000220190-How-to-backup-and-restore-MySQL-databases-on-Linux )
$ mysql -u opsi_wiki -pAsd234zxc567 opsi_wiki < ~/db_backups/Dump20200204.sql

# back up MySQL db to file
$ mysqldump -u opsi_wiki -pAsd234zxc567 opsi_wiki > ~/db_backups/Dump20200204.sql

#--------------------------------------------------------------
# --- GENERAL COMMANDS ---
# list of items
$ ls
$ ls -la
# ptint wirking directory
$ pwd
# go to home folder
$ cd
# create directory .ssh in home folder
$ mkdir -p ~/.ssh
# create file
$ sudo touch /etc/config.json
# clear console screen
$ clear
# open file to edit with Nano
$ sudo nano OPSI-Wiki/opsi_wiki/local_settings.py
# display content of file "hosts"
$ cat /etc/hosts 